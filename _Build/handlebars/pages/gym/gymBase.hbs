{{> header header--text=(findObjectInArray object="gym" in=@root.global.navigation key="url" value="name")}}

{{> banner title="Gym" content="Please don't contact me in regards to any WSM competitions, im busy"}}

<main class="container">
	<div class="innerContainer ut-padding ut-mobileFullChildren">

		<div class="fifth">
			<ul class="d3__list--workouts">
			</ul>
		</div>

		<div class="fourFifths ut-vertAlignTop last">
			<table class="siteStatus table__responsive d3-exercise">
			</table>
		</div>

		<div class="full">
			<div class="delta">
				<svg class="chart3"></svg>
			</div>
		</div>

		<div class="full">
			<div class="delta">
				<svg class="chart"></svg>
			</div>
		</div>

		<div class="threeQuarters">
			<div class="delta">
				<svg class="chart2"></svg>
			</div>
		</div>

		<div class="full last ut-vertAlignTop">
			<div class="ut-padding ut-marginBottom">
				<select class="full js-chartSelect">
					{{#each index.charts}}
						<option>{{name}}</option>
					{{/each}}
				</select>
			</div>
			<div class="key">
			</div>
		</div>

	</div>
</main>

<script type="text/javascript">
	function pageJS(){
		chartManager.init(function(){
			var gym = Gym(chartManager.all);
			var chest = Gym(chartManager.chest);

			chartManager.htmlList('.d3__list--workouts', gym.date(true));

			chartManager.htmlWorkout('.d3-exercise', gym.last());

			var data = [];
			var data2 = [];

			gym.each(function(d, i){
				var weights = d.workouts().sets().weight();
				var exercise = d.exercise();

				data.push({
					"label": exercise,
					"values": weights.map(function(dl, il){
						return {
		                    "id": il,
		                    "value": dl,
		                    "label": (il === (weights.length - 1)) ? exercise : ''
		                }
					})
				});

				data2.push({ 
					"data": d.max(),
					"label": exercise
				});
			});

			Line('.chart', true)
				.data(data)
				.att({
					xLabel: "Set",
					yLabel: "Weight",
					margin: {
						left: 50
					}
				})
				.render();

			Pie('.chart2', true)
				.data(data2)
				.att({
					showLabels: true,
					innerRadius: 0.5,
					labelMaxWidth: 200,
					labelFormat: "{0} kg {1}"
				})
				.render();

			Bar('.chart3', true)
				.data([
			        {
			            "id": "A",
			            "label": "NEXThaler",
			            "value": 80.3
			        },
			        {
			            "id": "B",
			            "label": "Accuhaler",
			            "value": 12.1
			        },
			        {
			            "id": "C",
			            "label": "Turbohaler",
			            "value": 7.6
			        }
			    ])
				.att({})
				.render();

			document.querySelector('.d3__list--workouts').onclick = function(e){
		    	chartManager.htmlWorkout('.d3-exercise', gym.workout(e.target.innerHTML));
		    	this.querySelector('.externalLink').classList.remove('externalLink');
		    	e.target.classList.add('externalLink');
		    };
		});

		/*document.querySelector('.js-chartSelect').onchange = function(){
	    	chartManager.chartIndex = this.selectedIndex;
	    	chartManager.update();
	    };*/
	}
</script>