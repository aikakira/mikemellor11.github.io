{{> header header--text=(findObjectInArray object="gym" in=@root.global.navigation key="url" value="name")}}

{{> banner title="Gym" content="Please don't contact me in regards to any WSM competitions, im busy"}}

<main class="container">
	<div class="innerContainer ut-padding ut-mobileFullChildren">

		<div class="twoThirds">
			<h3>Max weight</h3>
			<div class="delta">
				<svg class="chart chart3"></svg>
			</div>
		</div>

		<div class="third last">
			<h3>Targets hit</h3>
			<div class="delta">
				<svg class="chart chart2"></svg>
			</div>

			<h3>Intensity</h3>
			<div class="delta">
				<svg class="chart chart4"></svg>
			</div>
		</div>

		<div class="full">
			<h3>Sets</h3>
			<div class="delta">
				<svg class="chart chart1"></svg>
			</div>
		</div>

		<div class="fifth">
			<ul class="d3__list--workouts">
			</ul>
		</div>

		<div class="fourFifths ut-vertAlignTop last">
			<table class="siteStatus table__responsive d3-exercise">
			</table>
		</div>

		<div class="full last ut-vertAlignTop">
			<div class="ut-padding ut-marginBottom">
				<select class="full js-chartSelect">
					{{#each index.charts}}
						<option>{{name}}</option>
					{{/each}}
				</select>
			</div>
			<div class="key">
			</div>
		</div>

	</div>
</main>

<script type="text/javascript">
	function pageJS(){
		chartManager.init(function(){
			var gym = Gym(chartManager.all);
			var chest = Gym(chartManager.chest);

			chartManager.htmlList('.d3__list--workouts', gym.date(true).splice(0, 10));

			chartManager.htmlWorkout('.d3-exercise', gym.last());

			var data = [];
			var data2 = [0, 0];

			var data3 = [];
			var data4 = [
				{
					"data": 0,
					"label": 'Low'
				},
				{
					"data": 0,
					"label": 'Medium'
				},
				{
					"data": 0,
					"label": 'High'
				}
			]

			gym.each(function(d, i){
				var workout = d.workouts();
				var exercise = d.exercise();
				var sets = workout.sets();
				var weights = sets.weight();

				data.push({
					"label": exercise,
					"values": weights.map(function(dl, il){
						return {
		                    "id": il,
		                    "value": dl,
		                    "label": (il === (weights.length - 1)) ? exercise : ''
		                }
					})
				});

				workout.each(function(dl, il){
					data2[dl.target() | 0] += 1;

					switch(dl.intensity()){
						case 'Low':
							data4[0].data += 1;
							break;
						case 'Medium':
							data4[1].data += 1;
							break;
						case 'High':
							data4[2].data += 1;
							break;
					}

					if(il < workout.length() - 4){
						return;
					}
				});

				data3.push({
		            "id": i,
		            "label": exercise,
		            "value": d.max()
		        });
			});

			Line('.chart1', true)
				.data(data)
				.att({
					xLabel: "Set",
					yLabel: "Weight",
					margin: {
						left: 50
					}
				})
				.render();

			Pie('.chart2', true)
				.data([
					{
						"data": data2[1],
						"label": ''
					}
				])
				.att({
					showLabels: true,
					innerRadius: 0.5,
					harveyBall: true,
					totalCount: data2[0] + data2[1],
					showCenterPercent: true
				})
				.init()
				.render();

			Pie('.chart4', true)
				.data(data4)
				.att({
					showLabels: true,
					innerRadius: 0.5
				})
				.init()
				.render();

			Bar('.chart3', true)
				.att({
					barGap: 0.01,
					padding: {
						left: 0.01,
						right: 0.01
					},
					displayBar: true,
					yLabel: "Max weight",
					margin: {
						left: 60
					}
				})
				.data(data3)
				.render();

			document.querySelector('.d3__list--workouts').onclick = function(e){
				if(e.target.classList.contains('d3__list--workouts')){
					return;
				}

		    	chartManager.htmlWorkout('.d3-exercise', gym.workout(e.target.innerHTML));
		    	this.querySelector('.externalLink').classList.remove('externalLink');
		    	e.target.classList.add('externalLink');
		    };
		});

		/*document.querySelector('.js-chartSelect').onchange = function(){
	    	chartManager.chartIndex = this.selectedIndex;
	    	chartManager.update();
	    };*/
	}
</script>